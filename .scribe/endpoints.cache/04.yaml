## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Media Routes'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/media/{media_id}'
    metadata:
      groupName: 'Media Routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified media resource.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      media_id:
        name: media_id
        description: 'The ID of the media.'
        required: true
        example: 01986af5-a270-7075-8ef8-ef75ec51bbf3
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      media_id: 01986af5-a270-7075-8ef8-ef75ec51bbf3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"media":{"id":"01986af5-a270-7075-8ef8-ef75ec51bbf3","name":"media\/images\/70579c87-700f-44d7-9472-62e85b6ee288.png","url":"https:\/\/d1070l6upf61hp.cloudfront.net\/media\/images\/70579c87-700f-44d7-9472-62e85b6ee288.png?Expires=1754144739&Signature=Uad10v6ced3zE2PWbxc13HVsl7hju89nbWkkNR0eH2SCgJkEljcPyZnsPraroUgJ8Wv3saxDH7Dcys9PrEsB~6EKrdAvWdvZMZOdwxuagv4jn77RKIoSslTS2RVOpI1iOwObiG1BtcGlT0DihFxD1G8SikuMaocAs-LjQxpORP-~LBZe2wDM97yLM6-M04eIZmduIzmER9QRPAacpX88IELyGipMZtzkMmMhT2S6emBMSyRlKy5VDVMlPy1nXIsz0gJP7WmNS0yFHI~XOL1zcSC2orjFtQn46SPgMSXTxODJqb-wGaJY67JYXMz-CiA1IQ6W4PAqRhm2Qcs7kfyFGQ__&Key-Pair-Id=K1QD0FFQU2OZI5","type":"image","meta":null,"created_at":"2025-08-02T10:25:39.000000Z","updated_at":"2025-08-02T10:25:39.000000Z"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '20'
          x-ratelimit-remaining: '19'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/media
    metadata:
      groupName: 'Media Routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly uploaded image and create media record.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      image:
        name: image
        description: 'Must be an image. Must not be greater than 5120 kilobytes.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      post_id:
        name: post_id
        description: 'Must be a valid UUID. The <code>id</code> of an existing record in the posts table.'
        required: true
        example: 66529e01-d113-3473-8d6f-9e11e09332ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      post_id: 66529e01-d113-3473-8d6f-9e11e09332ea
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/media/{media_id}'
    metadata:
      groupName: 'Media Routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the specified media resource.'
      description: |-
        Checks authorization to ensure the user can delete the media,
        then deletes the media file from storage and removes the database record.
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      media_id:
        name: media_id
        description: 'The ID of the media.'
        required: true
        example: 01986af5-a270-7075-8ef8-ef75ec51bbf3
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      media_id: 01986af5-a270-7075-8ef8-ef75ec51bbf3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
