name: 'User Follow System'
description: |-

  APIs for following/unfollowing users and fetching followers/following lists.

  Requires authentication via Sanctum.
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/users/{user_id}/follow'
    metadata:
      groupName: 'User Follow System'
      groupDescription: |-

        APIs for following/unfollowing users and fetching followers/following lists.

        Requires authentication via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Follow a user.'
      description: 'Authenticated user follows the specified user.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user:
        name: user
        description: 'The UUID of the user to follow.'
        required: true
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: consequatur
      user: 123e4567-e89b-12d3-a456-426614174000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Followed successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{user_id}/unfollow'
    metadata:
      groupName: 'User Follow System'
      groupDescription: |-

        APIs for following/unfollowing users and fetching followers/following lists.

        Requires authentication via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Unfollow a user.'
      description: 'Authenticated user unfollows the specified user.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user:
        name: user
        description: 'The UUID of the user to unfollow.'
        required: true
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: consequatur
      user: 123e4567-e89b-12d3-a456-426614174000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Unfollowed successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{user_id}/followers'
    metadata:
      groupName: 'User Follow System'
      groupDescription: |-

        APIs for following/unfollowing users and fetching followers/following lists.

        Requires authentication via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get followers of a user.'
      description: 'Returns a paginated list of users who follow the specified user.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user:
        name: user
        description: 'The UUID of the user whose followers are being fetched.'
        required: true
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: consequatur
      user: 123e4567-e89b-12d3-a456-426614174000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": "123e4567-e89b-12d3-a456-426614174001",
                "username": "johndoe",
                "name": "John Doe",
                "bio": "Example bio",
                "profile_picture_url": "https://example.com/profile.jpg",
                "followers_count": 10,
                "following_count": 5,
                "created_at": "2025-08-05T12:00:00Z",
                "updated_at": "2025-08-05T12:00:00Z"
              }
            ],
            "links": {},
            "meta": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{user_id}/following'
    metadata:
      groupName: 'User Follow System'
      groupDescription: |-

        APIs for following/unfollowing users and fetching followers/following lists.

        Requires authentication via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get users that the user is following.'
      description: 'Returns a paginated list of users that the specified user is following.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user:
        name: user
        description: 'The UUID of the user whose following list is being fetched.'
        required: true
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      user_id: consequatur
      user: 123e4567-e89b-12d3-a456-426614174000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": "123e4567-e89b-12d3-a456-426614174002",
                "username": "janedoe",
                "name": "Jane Doe",
                "bio": "Another bio",
                "profile_picture_url": "https://example.com/profile2.jpg",
                "followers_count": 8,
                "following_count": 12,
                "created_at": "2025-08-05T12:00:00Z",
                "updated_at": "2025-08-05T12:00:00Z"
              }
            ],
            "links": {},
            "meta": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
