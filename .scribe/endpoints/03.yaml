name: 'Comment Routes'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/comments
    metadata:
      groupName: 'Comment Routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a paginated list of top-level comments with their replies.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/humzat.local\/api\/comments?page=1","last":"http:\/\/humzat.local\/api\/comments?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/humzat.local\/api\/comments?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/humzat.local\/api\/comments","per_page":10,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/comments/{id}'
    metadata:
      groupName: 'Comment Routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a specific comment along with its replies.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the comment.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\Comment] consequatur"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/comments
    metadata:
      groupName: 'Comment Routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created comment.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      body:
        name: body
        description: 'Must not be greater than 5000 characters.'
        required: true
        example: vmqeopfuudtdsufvyvddq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      post_id:
        name: post_id
        description: 'Must be a valid UUID. The <code>id</code> of an existing record in the posts table.'
        required: true
        example: 462ee709-6d9f-345a-95e6-76f833111fb8
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'Must be a valid UUID. The <code>id</code> of an existing record in the comments table.'
        required: false
        example: 1915c795-5d1c-3def-965b-5abe034dd150
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      body: vmqeopfuudtdsufvyvddq
      post_id: 462ee709-6d9f-345a-95e6-76f833111fb8
      parent_id: 1915c795-5d1c-3def-965b-5abe034dd150
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/comments/{id}'
    metadata:
      groupName: 'Comment Routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a comment if the authenticated user is the owner.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the comment.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      body:
        name: body
        description: 'Must not be greater than 5000 characters.'
        required: true
        example: vmqeopfuudtdsufvyvddq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      body: vmqeopfuudtdsufvyvddq
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/comments/{id}'
    metadata:
      groupName: 'Comment Routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a comment.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the comment.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
